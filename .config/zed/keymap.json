// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Workspace",
    "bindings": {
      //     "space space": "file_finder::Toggle"
      "cmd-s": "projects::OpenRecent"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      // "j k": "vim::NormalBefore"
    }
  },
  {
    "context": "Dock || Workspace",
    "bindings": {
      "ctrl-left": "workspace::ActivatePaneLeft",
      "ctrl-right": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "Workspace || (Editor && mode == full)",
    "bindings": {
      "cmd-e": "command_palette::Toggle",
      "cmd-<": "zed::OpenKeymap"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "ctrl-k": "menu::SelectPrevious",
      "ctrl-j": "menu::SelectNext",
      "ctrl-d": "tab_switcher::CloseSelectedItem"
    }
  },
  {
    "context": "Editor || Pane",
    "bindings": {
      "ctrl-h": ["pane::ActivateItem", 0],
      "ctrl-t": ["pane::ActivateItem", 1],
      "ctrl-n": ["pane::ActivateItem", 2],
      "ctrl-s": ["pane::ActivateItem", 3],
      "ctrl-shift-h": ["pane::ActivateItem", 4],
      "ctrl-shift-t": ["pane::ActivateItem", 5],
      "ctrl-shift-n": ["pane::ActivateItem", 6],
      "ctrl-shift-s": ["pane::ActivateItem", 7]
    }
  },
  {
    "context": "Editor && !edit_prediction",
    "bindings": {
      "tab": "editor::ShowEditPrediction"
    }
  },
  {
    "context": "Editor && showing_completions",
    "use_key_equivalents": true,
    "bindings": {
      "tab": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "cmd-l": "tab_switcher::ToggleAll"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "alt-f": ["workspace::SendKeystrokes", "ctrl-` shift-escape"]
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "alt-f": ["workspace::SendKeystrokes", "shift-escape cmd-j"]
    }
  },
  {
    "context": "VimControl && !menu",
    "bindings": {
      "ctrl-shift-u": "vim::ScrollUp",
      "ctrl-shift-d": "vim::ScrollDown",
      "ctrl-u": ["workspace::SendKeystrokes", "ctrl-shift-u z z"],
      "ctrl-d": ["workspace::SendKeystrokes", "ctrl-shift-d z z"],
      "q": null,
      "ctrl-j": "workspace::ActivatePaneDown",
      "m": null,
      "m p": "pane::SwapItemLeft",
      "m n": "pane::SwapItemRight",
      "`": null,
      "shift-h": "pane::ActivatePreviousItem",
      "shift-t": "pane::ActivateNextItem",
      "space g g ": ["task::Spawn", { "task_name": "Open Lazygit" }],
      "space o x": ["task::Spawn", { "task_name": "Open in Cursor" }],
      "space q q": "zed::Quit",
      "space b o": "pane::CloseOtherItems",
      "space w q": "pane::CloseActiveItem",
      "space m": "pane::TogglePinTab",
      "space shift-m": "pane::UnpinAllTabs",
      "space t": ["task::Spawn", { "task_name": "Open Terminal" }],
      "space ,": "tab_switcher::ToggleAll",
      "space e": "project_panel::ToggleFocus",
      "f": ["vim::PushFindForward", { "before": false, "multiline": true }],
      "t": ["vim::PushFindForward", { "before": true, "multiline": true }],
      "shift-f": [
        "vim::PushFindBackward",
        { "after": false, "multiline": true }
      ]
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "space e": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "vim_mode == normal || EmptyPane",
    "bindings": {
      "space space": "file_finder::Toggle"
    }
  },
  {
    "context": "vim_mode == normal",
    "bindings": {
      "ctrl-shift-x": "vim::DeleteRight",
      "ctrl-shift-alt-x": "vim::DeleteLeft",
      "x": ["workspace::SendKeystrokes", "\" _ ctrl-shift-x"],
      "shift-x": ["workspace::SendKeystrokes", "\" _ ctrl-shift-alt-x"],
      "'": "editor::Format"
    }
  },
  {
    "context": "vim_mode == visual",
    "bindings": {
      "shift-j": ["workspace::SendKeystrokes", "] e = g v"],
      "shift-k": ["workspace::SendKeystrokes", "[ e = g v"]
    }
  },
  {
    "context": "vim_mode == normal || vim_mode == visual",
    "bindings": {
      "s": "vim::PushSneak",
      "shift-s": "vim::PushSneakBackward"
    }
  },
  {
    "context": "vim_operator == c",
    "bindings": {
      "r": "vim::PushReplaceWithRegister"
    }
  },
  {
    "context": "vim_operator == d",
    "bindings": {
      "shift-p": "git::RestoreFile",
      "i": ["vim::PushObject", { "around": false }],
      "i n q": ["workspace::SendKeystrokes", "i q"]
    }
  },
  {
    "context": "vim_operator == a || vim_operator == i || vim_operator == cs",
    "bindings": {
      "q": "vim::MiniQuotes",
      "b": "vim::MiniBrackets"
      // "n q": ["workspace::SendKeystrokes", "i q"]
    }
  },
  {
    "context": "(vim_mode == normal || vim_mode == helix_normal) && !menu",
    "bindings": {
      "shift-u": "vim::Redo"
    }
  },
  {
    "context": "VimControl || !Editor && !Terminal",
    "bindings": {
      // window related commands (ctrl-w X)
      "ctrl-w": null,
      "ctrl-w ctrl-left": [
        "workspace::MoveItemToPaneInDirection",
        { "direction": "left" }
      ],
      "ctrl-w ctrl-right": [
        "workspace::MoveItemToPaneInDirection",
        { "direction": "right" }
      ]
    }
  }
]
